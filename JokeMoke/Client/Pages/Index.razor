@page "/"
@inject IUserService UserService
@inject IJokerService JokeService
@inject IStatService StatService
@inject NavigationManager NavigationManager

<PageTitle>جوک موک</PageTitle>

<br />

  <div class="row my-5">
        <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">
            <RadzenCard class="m-3">
                <h3 class="h5">سازنده</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path="@UserService.ProfilePicUrl" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                    <div>
                        <div>سازنده</div>
                        <b>@(joke.CreatedBy)</b>
                        <div class="mt-3">زمان ساخت جوک</div>
                        <b>@joke.CreatedAt</b>
                    </div>
                </div>
            </RadzenCard>
            <RadzenCard class="m-3">
                <h3 class="h5">جوک</h3>
                <div>
                    <div class="col-md-12">
                        <b>@(joke.Value)</b>
                    </div>
                </div>
            </RadzenCard>
            <button class="btn btn-dark" @onclick="(() => CommentsPage(joke.Id))"><i class="oi oi-pencil"></i>کامنت ها</button>
            <button class="btn btn-info" @onclick="(() => Like(joke.Id, 1))"><i class="oi oi-thumb-up"></i>@(jokeStatistics.LikeCount)</button>
            <button class="btn btn-danger" @onclick="(() => Like(joke.Id, 2))"><i class="oi oi-thumb-down"></i>@(jokeStatistics.DislikeCount)</button>
            <br />
        </div>
        <button class="btn btn-primary" @onclick="(() => RandomJoke())"><i class="oi oi-pencil"></i>جوک بعدی</button>
    </div>

<button class="btn btn-success" @onclick="CreateJokePage">جوک جدید بسازید</button>

@code {

    Joke joke = new Joke { JokeType = new JokeType() };

    JokeStatistics jokeStatistics = new JokeStatistics { Joke = new Joke() };

    protected override async Task OnInitializedAsync()
    {
        await JokeService.GetJokes();
        joke = await JokeService.GetRandomJoke();
        jokeStatistics = await StatService.GetStat(joke.Id);
    }

    async Task RandomJoke()
    {
        joke = await JokeService.GetRandomJoke();
    }

    async Task DeleteJoke(int id)
    {
        await JokeService.DeleteJoke(id);
        NavigationManager.NavigateTo("/", true);
    }

    async Task CommentsPage(int id)
    {
        //await JokeService.GetComments(id);
        NavigationManager.NavigateTo($"/comments/{id}");
    }

    async Task Like(int id, int no)
    {
        await StatService.LikeJoke(id, no); 
    }

    void CreateJokePage()
    {
       NavigationManager.NavigateTo("/createjoke");
    }
}
