@using Microsoft.AspNetCore.Authorization
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient
@inject IUserService userService

<style>
    #forMargin {
        margin-left: 7px;
    }
</style>

<div class="page">

    <main>
        
        <AuthorizeView>
            <Authorized>
        <div class="top-row px-4">
            <RadzenButton Click=@(args => ProfilePage()) Text="پروفایل" ButtonStyle="ButtonStyle.Primary" />
            <RadzenButton id="forMargin" Click=@(args => BackToHome()) Text="صفحه اصلی" ButtonStyle="ButtonStyle.Primary" />
        </div>
            </Authorized>
            <NotAuthorized>
        <div class="top-row px-4">
            <RadzenButton Click=@(args => LoginUser()) Text="ورود" ButtonStyle="ButtonStyle.Primary" />
        </div>
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <div class="top-row px-4">
            <RadzenButton Click=@(args => ManagementPage()) Text="مدیریت" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </AuthorizeView>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- Header -->
    <header class="header" id="header">

        <nav class="navbar container">
            <a href="./index.html">
                <h2 class="logo">Joke Moke</h2>
            </a>

            <div class="menu" id="menu">
                <ul class="list">
                    <li class="list-item">
                        <a href="#" class="list-link current">Home</a>
                    </li>
                    <li class="list-item">
                        <a href="#" class="list-link">Categories</a>
                    </li>
                    <li class="list-item">
                        <a href="#" class="list-link">Reviews</a>
                    </li>
                    <li class="list-item">
                        <a href="#" class="list-link">News</a>
                    </li>
                    <li class="list-item">
                        <a href="#" class="list-link">Membership</a>
                    </li>
                    <li class="list-item">
                        <a href="#" class="list-link">Contact</a>
                    </li>

                    <AuthorizeView>
                        <Authorized>
                        <li class="list-item screen-lg-hidden">
                            <a href="@LoginUser()" class="list-link">ورود</a>
                        </li>
                        </Authorized>
                        
                        <NotAuthorized>
                        <li class="list-item screen-lg-hidden">
                            <a href="@LoginUser()" class="list-link">خروج</a>
                        </li>
                        </NotAuthorized>
                    </AuthorizeView>

                </ul>
            </div>

            <div class="list list-right">
                <button class="btn place-items-center" id="theme-toggle-btn">
                    <i class="ri-sun-line sun-icon"></i>
                    <i class="ri-moon-line moon-icon"></i>
                </button>

                <button class="btn place-items-center" id="search-icon">
                    <i class="ri-search-line"></i>
                </button>

                <button class="btn place-items-center screen-lg-hidden menu-toggle-icon" id="menu-toggle-icon">
                    <i class="ri-menu-3-line open-menu-icon"></i>
                    <i class="ri-close-line close-menu-icon"></i>
                </button>

                <a href="#" class="list-link screen-sm-hidden">Sign in</a>
                <a href="#" class="btn sign-up-btn fancy-border screen-sm-hidden">
                    <span>Sign up</span>
                </a>
            </div>

        </nav>

    </header>

@code {

    public async Task LoginUser()
    {
        NavigationManager.NavigateTo("/login");
    }

    public async Task LoginUser()
    {
        NavigationManager.NavigateTo("/login");
    }

    public async Task BackToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    [Authorize(Roles = "Admin")]
    public async Task ManagementPage()
    {
        NavigationManager.NavigateTo("/management");
    }

    public async Task ProfilePage()
    {
        NavigationManager.NavigateTo("/profile");
    }
}

<RadzenDialog/>
<RadzenNotification/>
<RadzenContextMenu/>
<RadzenTooltip/>