@page "/createjoke"
@page "/createjoke/{id:int}"
@inject IJokerService JokeService
@inject IUserService userService
@inject NavigationManager NavigationManager

<style>
    body {
        background-color: #8EC5FC;
        background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);
    }
</style>

<PageTitle>جوک جدید بسازید</PageTitle>
    <h3>جوک جدید بسازید</h3>

<EditForm Model="joke" OnSubmit="HandleSubmit">
    <div>
        <lable for="Value">جوکتو بساز!</lable>
        <InputText id="value" @bind-Value="joke.Value" class="form-control"></InputText>
    </div>
    <div>
        <label>نوع جوک</label><br />
        <InputSelect @bind-Value="joke.JokeTypeId" class="form-select">
            @foreach (var JokeType in JokeService.JokeTypes)
           {
               <option value="@JokeType.Id">@JokeType.Name</option>
           }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-success">@btnText</button>

    @*<button type="button" class="btn btn-danger" @onclick="DeleteUser">Delete User</button>*@

    <br />

    <span>&nbsp;&nbsp;</span>@JokeService.Message

</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Joke joke = new Joke { JokeType = new JokeType() };

    protected override async  Task OnInitializedAsync()
    {
        btnText = "ساخت جوک";
        await JokeService.GetJokeTypes();
    }

    protected override async Task OnParametersSetAsync()
    {
            joke.JokeType = JokeService.JokeTypes[0];
            joke.JokeTypeId = joke.JokeType.Id;
    }

    async Task HandleSubmit()
    {
            await JokeService.CreateJoke(joke);
    }

    //async Task DeleteUser()
    //{
    //    await UserService.DeleteUser(user.Id);
    //}

}
