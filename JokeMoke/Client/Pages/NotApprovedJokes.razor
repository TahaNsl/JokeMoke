@page "/notapprovedjokes"
@inject IUserService UserService
@inject IJokerService JokeService
@inject IStatService StatService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles ="Admin")]

<PageTitle>مدیریت</PageTitle>

<h3>جوک های تایید نشده</h3>
<br />

<RadzenDataGrid Data="@JokeService.NotApprovedJokes" TItem="Joke" PageSize="5" AllowPaging="true"
        AllowFiltering="true" AllowColumnResize="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn Width="50px" TItem="Joke" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                <Template Context="Joke">
                    @(JokeService.NotApprovedJokes.IndexOf(Joke) + 1)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Joke" Property="Value" Title="محتوا" />
            <RadzenDataGridColumn TItem="Joke" Property="CreatedAt" Title="زمان ساخت" />
            <RadzenDataGridColumn TItem="Joke" Property="CreatedBy" Title="سازنده" />
            <RadzenDataGridColumn Width="320px" TItem="Joke" Property="Id" Title="مدیریت جوک">
            <Template Context="Joke">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Class="m-1" Click=@(() => DeleteJoke(Joke.Id)) Text="حذف" />
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="chrome_reader_mode" Class="m-1" Click=@(() => ApproveJoke(Joke.Id)) Text="تایید جوک" />
            </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

    <br />

    @if(JokeService.NotApprovedJokes != null && @JokeService.NotApprovedJokes.Count() != 0)
    {
     <button class="btn btn-danger" @onclick="DeleteAll">حذف تمام جوک ها</button>
    }

@code {
    [Parameter]
    public Guid? Id { get; set; }

     protected override async Task OnInitializedAsync()
    {
        await JokeService.GetNotApprovedJokes();
    }

    async Task DeleteJoke(Guid id)
    {
        await JokeService.DeleteJoke(id);
    }

    async Task DeleteAll()
    {
        await JokeService.DeleteAllJokes();
    }

    async Task ApproveJoke(Guid id)
    {
        await JokeService.ApproveJoke(id);
    }
}
