@page "/"
@inject IUserService UserService
@inject IJokerService JokeService
@inject NavigationManager NavigationManager

<PageTitle>خانه</PageTitle>

<h3>جوک ها</h3>
<br />

@if (@JokeService.Jokes.Count() == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid Data="@JokeService.Jokes" TItem="Joke" PageSize="5" AllowPaging="true"
        AllowFiltering="true" AllowColumnResize="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn Width="50px" TItem="Joke" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                <Template Context="Joke">
                    @(JokeService.Jokes.IndexOf(Joke) + 1)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Joke" Property="Value" Title="محتوا" />
            <RadzenDataGridColumn TItem="Joke" Property="JokeTypeId" Title="نوع جوک"/>

            <RadzenDataGridColumn Width="170px" TItem="Joke" Property="Id" Title="حذف">
            <Template Context="Joke">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Class="m-1" Click=@(() => DeleteJoke(Joke.Id)) Text="حذف" />
            </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Width="170px" TItem="Joke" Property="Id" Title="کامنت ها">
            <Template Context="Joke">
                <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="chrome_reader_mode" Class="m-1" Click=@(() => CommentsPage(Joke.Id)) Text="کامنت ها" />
            </Template>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>
}
<br />

<button class="btn btn-success" @onclick="CreateJoke">جوک جدید بسازید</button>

@*<table class="table">
    <thead>
        <tr>
            <th>User Name</th>
            <th>Emil</th>
            <th>Password</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in UserService.Users)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@user.Password</td>

            </tr>
        }
    </tbody>
</table>*@

@code {

    Joke joke = new Joke { JokeType = new JokeType() };

    protected override async Task OnInitializedAsync()
    {
        await JokeService.GetJokes();
    }

    async Task DeleteJoke(int id)
    {
        await JokeService.DeleteJoke(id);
        NavigationManager.NavigateTo("/", true);
    }

    async Task CommentsPage(int id)
    {
        //await JokeService.GetComments(id);
        NavigationManager.NavigateTo($"/comments/{id}");
    }

    void CreateJoke()
    {
       NavigationManager.NavigateTo("/createjoke");
    }
}
