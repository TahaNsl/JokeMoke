@page "/createuser"
@page "/createuser/{id:int}"
@inject IUserService UserService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles ="Admin")]

<style>
    body {
        background-color: #8EC5FC;
        background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);
    }
</style>

<PageTitle>ساخت یوزر</PageTitle>
    <h3>ساخت یوزر</h3>

<EditForm Model="user" OnSubmit="HandleSubmit">
    <div>
        <lable for="Username">نام کاربری</lable>
        <InputText id="username" @bind-Value="user.UserName" class="form-control"></InputText>
    </div>
    <div>
        <lable for="Email">ایمیل</lable>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
    </div>
    <div>
        <lable for="heroname">پسوورد</lable>
        <InputText id="password" @bind-Value="user.Password" class="form-control"></InputText>
    </div>
    <div>
        <label>رول</label><br />
        <InputSelect @bind-Value="user.RoleId" class="form-select">
            @foreach (var role in UserService.Roles)
           {
               <option value="@role.Id">@role.Name</option>
           }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-success">@btnText</button>
    @*<button type="button" class="btn btn-danger" @onclick="DeleteUser">Delete User</button>*@
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    User user = new User { Role = new Role() };

    protected override async  Task OnInitializedAsync()
    {
        btnText = "Create User";
        await UserService.GetRoles();
    }

    protected override async Task OnParametersSetAsync()
    {
            user.Role = UserService.Roles[1];
            user.RoleId = user.Role.Id;
    }

    async Task HandleSubmit()
    {
            await UserService.CreateUser(user);
    }

    //async Task DeleteUser()
    //{
    //    await UserService.DeleteUser(user.Id);
    //}

}
