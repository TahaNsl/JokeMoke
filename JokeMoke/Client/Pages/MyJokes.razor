@page "/myjokes"
@page "/myjokes/{id:guid}"
@inject IUserService UserService
@inject IJokerService JokeService
@inject IStatService StatService
@inject NavigationManager NavigationManager

<PageTitle>جوک های من</PageTitle>

<h3>جوک های من</h3>
<br />

    <RadzenDataGrid Data="@JokeService.MyJokes" TItem="Joke" PageSize="5" AllowPaging="true"
        AllowFiltering="true" AllowColumnResize="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn Width="50px" TItem="Joke" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                <Template Context="Joke">
                    @(JokeService.MyJokes.IndexOf(Joke) + 1)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Joke" Property="Value" Title="محتوا" />
            <RadzenDataGridColumn TItem="Joke" Property="CreatedAt" Title="زمان ساخت" />
            <RadzenDataGridColumn TItem="Joke" Property="CreatedBy" Title="سازنده" />
            @*<RadzenDataGridColumn TItem="Joke" Property="JokeStatistics.LikeCount" Title="تعداد لایک" />
            <RadzenDataGridColumn TItem="Joke" Property="JokeStatistics.DislikeCount" Title="تعداد دیسلایک" />*@
            <RadzenDataGridColumn Width="300px" TItem="Joke" Property="Id" Title="مدیریت جوک">
            <Template Context="Joke">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Class="m-1" Click=@(() => DeleteJoke(Joke.Id)) Text="حذف" />
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="chrome_reader_mode" Class="m-1" Click=@(() => CommentsPage(Joke.Id)) Text="کامنت ها" />
            </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

<br />
<br />
<button class="btn btn-success" @onclick="CreateJokePage">جوک جدید بسازید</button>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await JokeService.GetMyJokes();
    }

    void CreateJokePage()
    {
        NavigationManager.NavigateTo("/createjoke");
    }

    async Task DeleteJoke(Guid id)
    {
        await JokeService.DeleteJoke(id);
        NavigationManager.NavigateTo("/myjokes", true);
    }

    async Task CommentsPage(Guid id)
    {
       NavigationManager.NavigateTo($"/comments/{id}");
    }
}
